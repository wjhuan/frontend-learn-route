(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{654:function(t,s,a){t.exports=a.p+"assets/img/ECstack-Heap.be839ec7.jpg"},655:function(t,s,a){t.exports=a.p+"assets/img/ec-02.f9bb738b.jpg"},656:function(t,s,a){t.exports=a.p+"assets/img/ec-fn.1231c34e.jpg"},657:function(t,s,a){t.exports=a.p+"assets/img/block-context.17ad3daa.jpg"},658:function(t,s,a){t.exports=a.p+"assets/img/Xnip2021-12-15_21-12-55.f55376c1.jpg"},752:function(t,s,a){"use strict";a.r(s);var n=a(74),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js-底层堆栈内存处理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-底层堆栈内存处理机制"}},[t._v("#")]),t._v(" JS 底层堆栈内存处理机制")]),t._v(" "),s("h2",{attrs:{id:"代码运行环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码运行环境"}},[t._v("#")]),t._v(" 代码运行环境")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器"),s("code",[t._v("「内核：webkit(blink)、gecko、presto、trident、Chromium...」")])])]),t._v(" "),s("li",[s("p",[t._v("IOS/安卓原型 App 中，基于 "),s("code",[t._v("webview")]),t._v(" 运行页面和 "),s("code",[t._v("JS「内核：webkit」")])]),t._v(" "),s("blockquote",[s("p",[t._v("支持 "),s("code",[t._v("window")]),t._v("、没有 "),s("code",[t._v("global")]),t._v("、支持 "),s("code",[t._v("ES6Module")]),t._v(" 模块规范、不支持 "),s("code",[t._v("CommonJS")]),t._v(" 模块规范")])])]),t._v(" "),s("li",[s("p",[t._v("Node"),s("code",[t._v("「内核：webkit」")])]),t._v(" "),s("blockquote",[s("p",[t._v("特点：支持 "),s("code",[t._v("global")]),t._v("、不支持 "),s("code",[t._v("window")]),t._v("、支持 "),s("code",[t._v("CommonJS")]),t._v("、不支持 "),s("code",[t._v("ES6Module")])])])]),t._v(" "),s("li",[s("p",[t._v("webpack"),s("code",[t._v("「基于 Node 环境编译打包 JS，最后把编译后的结果运行在浏览器中」")])]),t._v(" "),s("blockquote",[s("p",[t._v("特点：浏览器和 "),s("code",[t._v("Node")]),t._v(" 环境支持的他都支持")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("不论什么环境下执行代码，总要开辟出相关的内存(执行内存/内存条)，用来存储值"),s("code",[t._v("「Heap 堆内存」")]),t._v("以及运行代码"),s("code",[t._v("「Satck 栈内存 -> E（Execution）C（Context）Stack 执行环境栈」")])])]),t._v(" "),s("h2",{attrs:{id:"堆-heap-栈-stack-内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap-栈-stack-内存"}},[t._v("#")]),t._v(" 堆(Heap)栈(Stack)内存")]),t._v(" "),s("blockquote",[s("p",[t._v("都是在计算机内存中开辟的空间")])]),t._v(" "),s("ol",[s("li",[t._v("栈内存 "),s("code",[t._v("Stack：ECStack（Execution [ˌeksɪˈkjuːʃn] Context Stack）")]),t._v(" "),s("ul",[s("li",[t._v("存储原始值类型值")]),t._v(" "),s("li",[t._v("代码执行的环境")])])]),t._v(" "),s("li",[t._v("堆内存 "),s("code",[t._v("Heap")]),t._v(" "),s("ul",[s("li",[t._v("存储对象类型值")])])])]),t._v(" "),s("h2",{attrs:{id:"执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),s("p",[s("code",[t._v("EC（Execution [ˌeksɪˈkjuːʃn] Context ）")]),t._v("执行上下文：区分代码执行的环境")]),t._v(" "),s("ol",[s("li",[t._v("常见上下文分类\n"),s("ul",[s("li",[t._v("全局上下文 EC(G)")]),t._v(" "),s("li",[t._v("函数私有上下文 EC(FN)")]),t._v(" "),s("li",[t._v("块级私有上下文 EC(BLOCK)")])])]),t._v(" "),s("li",[t._v("产生私有上下文 -> 进栈执行 -> 出栈释放(可能释放)")]),t._v(" "),s("li",[t._v("变量对象：当前上下文中，用来存储声明的变量的地方\n"),s("ul",[s("li",[s("code",[t._v("VO（Varibale Object）")]),t._v("："),s("code",[t._v("VO(G)")]),t._v(" 或者 "),s("code",[t._v("VO(BLOCK)")])]),t._v(" "),s("li",[s("code",[t._v("AO（Active Object）")]),t._v("："),s("code",[t._v("AO(?)")])])])])]),t._v(" "),s("h2",{attrs:{id:"全局对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局对象"}},[t._v("#")]),t._v(" 全局对象")]),t._v(" "),s("p",[s("code",[t._v("GO（Global Object）")]),t._v("全局对象")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("window")]),t._v(" 指向 "),s("code",[t._v("GO")]),t._v(" 对象")]),t._v(" "),s("li",[t._v("全局上下文中，基于"),s("code",[t._v("var/function")]),t._v("声明的变量是直接存储到"),s("code",[t._v("GO")]),t._v("对象上的；而基于"),s("code",[t._v("let/const")]),t._v("声明的变量才是存放在"),s("code",[t._v("VO(G)")]),t._v("中的；")])]),t._v(" "),s("h2",{attrs:{id:"定义变量赋值操作步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义变量赋值操作步骤"}},[t._v("#")]),t._v(" 定义变量赋值操作步骤")]),t._v(" "),s("ol",[s("li",[t._v("第一步：创建值\n"),s("ul",[s("li",[t._v("原始值类型：直接存储在栈内存中，按值操作")]),t._v(" "),s("li",[t._v("对象类型值：按照堆内存地址来操作\n"),s("ul",[s("li",[t._v("对象：开辟一个堆内存空间(16 进制地址)、依次存储对象的键值对、把空间地址赋值给变量")]),t._v(" "),s("li",[t._v("函数：内存空间中存储三部分信息\n"),s("ul",[s("li",[t._v("作用域 [[scope]]：当前所处上下文")]),t._v(" "),s("li",[t._v("函数体中的代码字符串")]),t._v(" "),s("li",[t._v("当做普通对象存储的静态属性和方法「name & length」")])])])])]),t._v(" "),s("li",[t._v("第二步：声明变量 declare")]),t._v(" "),s("li",[t._v("第三步：变量和值关联在一起（赋值） defined")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(654),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"练习题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#练习题"}},[t._v("#")]),t._v(" 练习题")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:a(655),alt:""}})]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:a(656),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"变量提升机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升机制"}},[t._v("#")]),t._v(" 变量提升机制")]),t._v(" "),s("p",[t._v("在“当前上下文”中，代码执行之前，浏览器首先会把所有带"),s("code",[t._v("var/function")]),t._v("关键字的进行提前声明或者定义：带"),s("code",[t._v("var")]),t._v("的只是提前声明 & 带"),s("code",[t._v("function")]),t._v("的，此阶段声明+定义{赋值}都完成了")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("let/const/import/class")]),t._v(" 声明的变量不存在变量提升")]),t._v(" "),s("li",[t._v("重复声明的问题")]),t._v(" "),s("li",[t._v("推荐使用函数表达式，确保函数执行只能放在“创建函数”的下面，保证逻辑严谨性")]),t._v(" "),s("li",[t._v("条件判断：在当前上下文中，变量提升阶段，不论条件是否成立，都要进行变量提升\n"),s("ul",[s("li",[t._v("var：还是只声明")]),t._v(" "),s("li",[t._v("function：判断体中的函数，在变量提升阶段，只声明不赋值「函数是个渣男」")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n EC(G)全局执行上下文\n   VO(G)/GO\n     a -> 12\n   变量提升：var a;\n   代码执行\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 其实最开始浏览器从服务器端获取的"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("都是文本")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，只不过声明了其格式是「Content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("」，浏览器首先按照这个格式去解析代码 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" “词法解析”阶段「目标是生成“"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AST")]),t._v("词法解析树”」\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 基于"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("等声明的变量：在词法解析阶段，其实就已经明确了，未来在此上下文中，必然会存在这些变量；代码执行中，如果出现在具体声明的代码之前使用这些变量，浏览器会抛出错误！！\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught ReferenceError: Cannot access 'b' before initialization")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n EC(G)\n   VO(G)/GO\n     fn -> 0x001 [[scope]]:EC(G)\n        -> 0x002 [[scope]]:EC(G)\n        -> 12\n   变量提升:\n     function fn(){ console.log(1); }\n     var fn;  //上下文中已经存在fn变量了，不会重复声明\n     function fn(){ console.log(2); }\n   代码执行:\n */")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//function->2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳过「变量提升阶段已经处理过了」")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//function->2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳过var fn操作，但是赋值的操作在变量提升阶段没搞过，需要执行")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳过")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n EC(G)\n   VO(G)/GO\n     a\n   变量提升：不论条件是否成立，都要进行变量提升（对于var来讲新老版本浏览器没有任何影响，但是对于判断体中出现的function来讲，新老版本表现不一致：老版本 函数还是声明+定义  新版本 函数只会声明，不在定义）\n     var a;\n */")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'a' in window  TRUE")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),s("h2",{attrs:{id:"块级私有上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级私有上下文"}},[t._v("#")]),t._v(" 块级私有上下文")]),t._v(" "),s("p",[t._v("除"),s("code",[t._v("函数和对象")]),t._v("的大括号外"),s("code",[t._v("「例如：判断体/循环体/代码块…」")]),t._v("，如果在大括号中出现了 "),s("code",[t._v("let/const/function/class")]),t._v(" 等关键词声明变量，则当前大括号会产生一个"),s("code",[t._v("块级私有上下文")]),t._v("；它的上级上下文是所处的环境；"),s("code",[t._v("var")]),t._v(" 不产生，也不受块级上下文的影响；")]),t._v(" "),s("ol",[s("li",[t._v("函数是个渣男")]),t._v(" "),s("li",[t._v("循环中的块级上下文")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(657),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"let-const-var-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let-const-var-的区别"}},[t._v("#")]),t._v(" let\\const\\var 的区别")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("let")]),t._v("不存在变量提升,不允许在定义之前使用")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught ReferenceError: Cannot access 'b' before initialization")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[t._v("let")]),t._v("不允许重复声明「不论当前上下文中，基于何种方式声明过这个变量，都不允许基于"),s("code",[t._v("let")]),t._v("再次声明」\n"),s("blockquote",[s("p",[s("code",[t._v("Uncaught SyntaxError: Identifier 'a' has already been declared")]),t._v("在词法解析阶段，发现有基于 "),s("code",[t._v("let")]),t._v("重复声明，词法解析就报错了，所以 "),s("code",[t._v("JS")]),t._v(" 代码都不会执行")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OK'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("在全局上下文中，基于"),s("code",[t._v("var/function")]),t._v("声明的变量，是给"),s("code",[t._v("window(GO)")]),t._v("设置的全局属性；基于"),s("code",[t._v("let/const")]),t._v("声明的变量是放在"),s("code",[t._v("VO(G)")]),t._v("中的，和"),s("code",[t._v("GO")]),t._v("没有任何的关系；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("let")]),t._v("会产生块级上下文")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12 13")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught ReferenceError: b is not defined  b是块级上下文中私有的")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[s("code",[t._v("let")]),t._v("的暂时性死区问题")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// console.log(typeof a); //"undefined" 基于typeof检测一个未被声明的变量，结果不会抱错，而是"undefined"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught ReferenceError: Cannot access 'a' before initialization")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("基于"),s("code",[t._v("const")]),t._v(" 声明的变量，首先必须赋值初始值，而且一但和某个值关联，后期不允许更改其指针指向（也就是不能重新赋值为其他的值)")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught SyntaxError: Missing initializer in const declaration")]),t._v("\n")])])]),s("h2",{attrs:{id:"js-事件循环机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-事件循环机制"}},[t._v("#")]),t._v(" js 事件循环机制")]),t._v(" "),s("h3",{attrs:{id:"进程-vs-线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程-vs-线程"}},[t._v("#")]),t._v(" 进程 vs 线程")]),t._v(" "),s("ol",[s("li",[t._v("进程其实就是一个程序(浏览器中打开一个页面，也是开辟一个进程)")]),t._v(" "),s("li",[t._v("线程是进程中具体去执行相关任务的")])]),t._v(" "),s("blockquote",[s("p",[t._v("同步编程：只能一件事一件事的处理，上一件事情完成，才能处理下一件事情「一般都是因为单线程」,异步编程：同时可以处理多件事情「一般是因为多线程」")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("浏览器是多线程的，可以同时处理很多事情：")]),t._v(" "),s("ul",[s("li",[t._v("GUI 渲染线程")]),t._v(" "),s("li",[t._v("JS 引擎线程「JS 引擎线程会把栈内存中的代码逐行解析执行」")]),t._v(" "),s("li",[t._v("监听事件触发线程")]),t._v(" "),s("li",[t._v("定时触发器线程")]),t._v(" "),s("li",[t._v("异步 HTTP 请求线程")]),t._v(" "),s("li",[t._v("WebWorker\n"),s("blockquote",[s("p",[t._v("所以浏览器利用多线程，完全可以同时处理很多事情，实现异步编程~~")])])])])]),t._v(" "),s("li",[s("p",[t._v("JS 代码的执行是单线程的：因为浏览器只分配一个线程“JS 引擎线程(主线程)”用来渲染和解析 JS")])]),t._v(" "),s("li",[s("p",[t._v("JS 中大部分代码都是同步的：如果此时主线程正在执行某些代码，那么其余的事情都做不了（例如：循环就是同步代码，如果 JS 中出现死循环，那么主线程永远空闲不下来，其他的事情都处理不了，整个页面就卡在这卡死了！！！）")])]),t._v(" "),s("li",[s("p",[t._v("JS 中也有一部分代码是异步的：并不是像想象中的同时执行很多代码，而是“基于 EventLoop&浏览器的多线程机制”实现出监听、排队的机制")])]),t._v(" "),s("li",[s("p",[t._v("异步微任务：优先级高")]),t._v(" "),s("ul",[s("li",[t._v("requestAnimationFrame 实现 JS 动画")]),t._v(" "),s("li",[t._v("Promise.then | resolve/reject")]),t._v(" "),s("li",[t._v("await")]),t._v(" "),s("li",[t._v("queueMicrotask 创建一个新的异步微任务")]),t._v(" "),s("li",[t._v("IntersectionObserver 监听 DOM 元素和视口交叉的信息")]),t._v(" "),s("li",[t._v("MutationObserver 监听 DOM 元素属性改变")]),t._v(" "),s("li",[t._v("process.nextTick")])])]),t._v(" "),s("li",[s("p",[t._v("异步宏任务：优先级低")]),t._v(" "),s("ul",[s("li",[t._v("setTimeout/setInterval")]),t._v(" "),s("li",[t._v("事件绑定")]),t._v(" "),s("li",[t._v("ajax/fetch 异步数据请求")]),t._v(" "),s("li",[t._v("MessageChannel")]),t._v(" "),s("li",[t._v("setImmediate")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:a(658),alt:""}})])])}),[],!1,null,null,null);s.default=e.exports}}]);